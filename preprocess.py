import argparse
import pandas as pd
from sklearn.preprocessing import StandardScaler, LabelEncoder
import os

# ğŸ“Œ 1. DÃ©finition des arguments pour Azure ML
parser = argparse.ArgumentParser()
parser.add_argument("--input_data", type=str, required=True, help="Chemin vers le fichier d'entrÃ©e")
parser.add_argument("--output_data", type=str, required=True, help="Chemin vers le fichier de sortie")
args = parser.parse_args()

# ğŸ“Œ 2. Charger les donnÃ©es IDS
print(f"ğŸ“¥ Chargement des donnÃ©es depuis : {args.input_data}")
df = pd.read_csv(args.input_data)

# ğŸ“Œ 3. Suppression des colonnes inutiles (si elles existent)
columns_to_drop = ["id", "timestamp"]
df = df.drop(columns=[col for col in columns_to_drop if col in df.columns], errors="ignore")

# ğŸ“Œ 4. Encodage des labels si la colonne "label" existe
if "label" in df.columns:
    print("ğŸ”„ Encodage de la colonne 'label'...")
    label_encoder = LabelEncoder()
    df["label"] = label_encoder.fit_transform(df["label"])

# ğŸ“Œ 5. Normalisation des features numÃ©riques
print("ğŸ“Š Normalisation des donnÃ©es...")
scaler = StandardScaler()
df.iloc[:, :-1] = scaler.fit_transform(df.iloc[:, :-1])

# ğŸ“Œ 6. CrÃ©ation du dossier de sortie (si inexistant)
os.makedirs(os.path.dirname(args.output_data), exist_ok=True)

# ğŸ“Œ 7. Sauvegarde des donnÃ©es prÃ©traitÃ©es
df.to_csv(args.output_data, index=False)
print(f"âœ… DonnÃ©es prÃ©traitÃ©es sauvegardÃ©es dans : {args.output_data}")
